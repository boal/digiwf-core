spring:
  cloud:
    function:
      definition: functionRouter;sendMessage;
      routing-expression: "headers['type']"
    stream:
      function:
        routing:
          enabled: true
      default-binder: kafka
      default:
        consumer:
          maxAttempts: 3
      kafka:
        bindings:
          functionRouter-in-0:
            consumer:
              enableDlq: true
              dlqName: ${io.muenchendigital.digiwf.message.deadLetterQueueDestination}
        binder:
          auto-create-topics: 'false'
          configuration:
            security:
              protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
          producerProperties:
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          consumerProperties:
            auto:
              offset:
                reset: latest
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          brokers: ${KAFKA_BOOTSTRAP_SERVER:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:29092}
  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: '*'
