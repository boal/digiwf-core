<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>digiwf-engine-service</artifactId>
    <name>digiwf-engine-service</name>

    <parent>
        <groupId>de.muenchen.oss.digiwf</groupId>
        <artifactId>digiwf-engine</artifactId>
        <version>1.8.0-SNAPSHOT</version>
    </parent>

    <properties>
        <apache.commons.collections4>4.4</apache.commons.collections4>
        <apache.commons.csv>1.10.0</apache.commons.csv>
        <apache.commons.io>2.15.1</apache.commons.io>
        <apache.commons.lang3>3.12.0</apache.commons.lang3>
        <apache.commons.text>1.11.0</apache.commons.text>
        <apache.commons.validator>1.8.0</apache.commons.validator>

        <miranum-ide.version>0.3.2</miranum-ide.version>
        <ojdbc10.version>19.22.0.0</ojdbc10.version>
        <javafaker.version>1.0.2</javafaker.version>
        <maven.deploy.skip>true</maven.deploy.skip>
        <cxf.version>3.6.2</cxf.version>
        <postgresql.version>42.7.0</postgresql.version>
        <jaxws.version>2.3.0</jaxws.version>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
        </dependency>

        <!-- DigiWF -->
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-json-serialization-starter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-s3-integration-client-starter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-polyflow-connector-starter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-spring-security-starter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-engine-cockpit</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-spring-logging-and-tracing</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-email-starter</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>de.muenchen.oss.digiwf</groupId>
            <artifactId>digiwf-camunda-prometheus-starter</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Streaming -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>

        <!-- Camunda -->
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-plugin-spin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-dataformat-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.holunda.data</groupId>
            <artifactId>camunda-bpm-data</artifactId>
            <version>1.5.0</version>
        </dependency>

        <!-- Miranum-IDE -->
        <dependency>
            <groupId>io.miragon.miranum</groupId>
            <artifactId>miranum-deployment-receiver-core</artifactId>
            <version>${miranum-ide.version}</version>
        </dependency>

        <!-- Caching -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jsonSchema</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- json etc. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Datenbank -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- Hibernate Model Gen for type safe criteria -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc10</artifactId>
            <version>${ojdbc10.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>

        <!-- Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- apache commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${apache.commons.collections4}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${apache.commons.csv}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache.commons.io}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${apache.commons.text}</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${apache.commons.validator}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers-standard-package</artifactId>
            <version>${tika.version}</version>
        </dependency>


        <dependency><!-- jakarta.xml.ws.* -->
            <groupId>jakarta.xml.ws</groupId>
            <artifactId>jakarta.xml.ws-api</artifactId>
        </dependency>
        <dependency> <!-- jakarta.activation.DataSource -->
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>

        <dependency> <!-- com.sun.xml.internal.ws.spi.ProviderImpl -->
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>4.0.2</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
            <version>${camunda.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <!-- FIXME legacy version -->
        <dependency>
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-assert-scenario</artifactId>
            <version>1.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.community.mockito</groupId>
            <artifactId>camunda-platform-7-mockito</artifactId>
            <version>7.20.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-bpm-junit5</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                        <configuration>
                            <sourceRoot>${project.build.directory}/generated/cxf</sourceRoot>
                            <additionalJvmArgs>-Dlogback.configurationFile=${project.basedir}/src/test/resources/logback-codegen.xml</additionalJvmArgs>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/dms.wsdl</wsdl>
                                    <wsdlLocation>classpath:dms.wsdl</wsdlLocation>
                                    <extraargs>
                                        <extraarg>-quiet</extraarg>
                                    </extraargs>
                                    <bindingFiles>
                                        <bindingFile>${basedir}/src/main/resources/binding.xml</bindingFile>
                                    </bindingFiles>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${basedir}/target/generated/cxf</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-lib-ban</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <!-- the activation framework was renamed to jarkata activation framework -->
                                    <excludes>
                                        <exclude>javax.activation:javax.activation-api</exclude>
                                        <exclude>com.sun.activation:javax.activation</exclude>
                                        <exclude>javax.activation:activation</exclude>
                                    </excludes>
                                    <message>use jakarta.activation:jakarta.activation-api or com.sun.activation:jakarta.activation instead of javax.activation</message>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <!-- Profile for generating SQL scripts out of Hibernate Entities -->
            <id>generate-sql</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.juplo</groupId>
                        <artifactId>hibernate-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-h2-ddl</id>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                                <configuration>
                                    <dialect>org.hibernate.dialect.H2Dialect</dialect>
                                    <physicalNamingStrategy>org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy</physicalNamingStrategy>
                                    <execute>false</execute>
                                    <show>true</show>
                                    <format>true</format>
                                    <outputFile>h2_ddl.sql</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-postgresql-ddl</id>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                                <configuration>
                                    <dialect>de.muenchen.oss.digiwf.shared.configuration.dialect.NoToastPostgresSQLDialect</dialect>
                                    <physicalNamingStrategy>org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy</physicalNamingStrategy>
                                    <execute>false</execute>
                                    <show>true</show>
                                    <format>true</format>
                                    <outputFile>postgresql_ddl.sql</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-oracle-ddl</id>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                                <configuration>
                                    <dialect>org.hibernate.dialect.Oracle9iDialect</dialect>
                                    <physicalNamingStrategy>org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy</physicalNamingStrategy>
                                    <execute>false</execute>
                                    <show>true</show>
                                    <format>true</format>
                                    <outputFile>oracle_ddl.sql</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <!-- Jackson datatype jars starting with version 2.10.0 contain a module-info.class file which breaks older javassist versions. -->
                            <dependency>
                                <groupId>org.javassist</groupId>
                                <artifactId>javassist</artifactId>
                                <version>3.30.2-GA</version>
                            </dependency>
                            <dependency>
                                <groupId>javax.xml.bind</groupId>
                                <artifactId>jaxb-api</artifactId>
                                <version>2.3.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Starting from JDK 12+, Nashorn is not part of JDK -->
            <id>jdk12</id>
            <activation>
                <jdk>[12,</jdk>
            </activation>
            <properties>
                <graalvm.version>23.0.3</graalvm.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.graalvm.sdk</groupId>
                    <artifactId>graal-sdk</artifactId>
                    <version>${graalvm.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.graalvm.js</groupId>
                    <artifactId>js</artifactId>
                    <version>${graalvm.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>org.graalvm.js</groupId>
                    <artifactId>js-scriptengine</artifactId>
                    <version>${graalvm.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
